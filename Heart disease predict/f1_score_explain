1. 정확도 : Accuracy
2. 정밀도 : Precision
3. 재현율 : Recall
4. F1 Score : 정밀도와 재현율의 조화 평균


정확도 : 예측이 정답과 얼마나 정확한가?
정밀도 : 예측한 것중에 정답의 비율은?
재현율 : 찾아야 할 것중에 실제로 찾은 비율은?
F1 Score : 정밀도와 재현율의 평균

이중에서 F1 Score 값이 높으면 성능이 높다고 할 수 있다. 하지만 정확도, 정밀도, 재현율은 하나만 높다고 성능이 좋은 것은 아니다.



너목보(너의 목소리가 보여) 를 예로 들어보자
6명 중에는 음치도 있고 노래를 잘하는 실력자(정상)도 있다.
똑같은 대상으로부터 음치를 찾는 것과 실력자를 찾는 것은 다르다!! 
목표를 음치를 찾는 것으로 정해보자. 누가 음치인지 겉모습만 보고 맞추도록 해보자.
외모를 보고 감으로 예측을 해보자.


번호 : [  1,    2,    3,    4,    5,    6  ]
정답 : [음치,음치,음치,음치,정상,정상] 
예측 : [음치,음치,정상,정상,정상,정상]


정확도 : 예측이 맞은 비율은?

         1,2,5,6 번 맞추고 3,4번은 틀렸다. 6명중 4명 맞췄으므로 4/6 = 2/3 = 0.66 

정밀도 : 음치라고 예측한 사람들 중에 진짜 음치가 얼마나 있는가?

          내가 음치라고 예측한 1,2번 이 둘다 음치가 맞았다. 2/2 = 1.00

재현율 : 전체 음치 중에서 내가 맞춘 음치의 비율은?

          원래 음치가 4명 있는데 나는 그중에서 2명을 맞췄다. 2/4 = 0.5

F1 Score : 정밀도와 재현율의 평균 

            2 * 정밀도 * 재현율 /(정밀도+재현율) = 2 * 1.00 * 0.5 / (1.00 + 0.5) = 0.66


만약 음치 아니라 실력자를 찾는 것이 목적이었다면

정확도 : 예측이 맞은 비율은?

         1,2,5,6 번 맞추고 3,4번은 틀렸다. 6명중 4명 맞췄으므로 4/6 = 2/3 = 0.66 

정밀도 : 실력자라고 예측한 사람들 중에 진짜 실력자가 얼마나 있는가?

          내가 실력자라고 예측한 3,4,5,6번 중 실력자는 5,6번 뿐이다. 2/4 = 0.5

재현율 : 전체 실력자 중에서 내가 맞춘 실력자의 비율은?

          원래 실력자가 2명 있는데 나는 그중에서 2명을 맞췄다.  2/2 = 1.00

F1 Score : 정밀도와 재현율의 평균 

            2 * 정밀도 * 재현율 /(정밀도+재현율) = 2 * 0.5 * 1.0 / (0.5 + 1.0) = 0.66


대부분의  분류문제는 희소한 샘플을 찾는 것이 목적이다.

위의 예에서 음치는 4명이고 정상이 2명이다. 음치가 많고 정상이 희소하므로  아마도 정상을 찾는 것이 목표일 것이다.



파이썬으로 구현해보자


import numpy as np
import sklearn.metrics as metrics

y = np.array([1,1,1,1,0,0]) #0은 정상(실력자), 1은 음치

p = np.array([1,1,0,0,0,0]) #나의 예측

